- name: install redis
  yum: name=redis30u

- name: disable default redis service
  service:
    name: redis
    state: stopped
    enabled: no
    use: service      # forces use of old SysV service manager on RHEL 7

- name: create /etc/redis dir
  file:
    path: /etc/redis
    state: directory
    owner: root
    group: root
    mode: 0755
  notify: restart redis

- name: create /var/lib/redis/{{ redis_instance.name }} dir
  file:
    path: /var/lib/redis/{{ redis_instance.name }}
    state: directory
    owner: redis
    group: redis
    mode: 0700

- name: configure redis-{{ redis_instance.name }} service
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_items:
    - src: redis/redis-base.conf
      dest: /etc/redis/redis-base.conf
      mode: "0644"
    - src: redis/redis.conf
      dest: /etc/redis/redis-{{ redis_instance.name }}.conf
      mode: "0644"
    - src: init.d/redis
      dest: /etc/init.d/redis-{{ redis_instance.name }}
      mode: "0755"
  register: redis_config
  notify: restart redis

# append the actual service name to list which the "restart redis" handler iterates
# this is neccessary because handlers cannot use variables in the same way tasks can
- name: register redis-{{ redis_instance.name }} restart
  set_fact: redis_service_restart="{{ redis_service_restart|default([]) }} + [ 'redis-{{ redis_instance.name }}' ]"
  when: redis_config.changed

- name: starting redis-{{ redis_instance.name }} service
  service:
    name: redis-{{ redis_instance.name }}
    state: started
    enabled: yes
    use: service      # forces use of old SysV service manager on RHEL 7
